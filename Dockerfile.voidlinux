FROM voidlinux/voidlinux-musl
MAINTAINER Jonathan Schultz <jonathan@schultz.la>

# Can't work out how to make this work dynamically
ENV http_proxy http://172.17.0.1:3142

RUN xbps-install --update --sync --yes
RUN xbps-install --yes bash ncurses-term vim

# RUN xbps-install --yes net-tools netcat

RUN xbps-install --yes sudo && echo 'kdedev ALL=NOPASSWD: ALL' >> /etc/sudoers
RUN useradd kdedev
USER kdedev
WORKDIR /home/kdedev
CMD bash

# Download and build QT everywhere  and QT webkit
RUN sudo xbps-install -y wget xz && \
    wget -qO- http://download.qt.io/official_releases/qt/5.11/5.11.3/single/qt-everywhere-src-5.11.3.tar.xz | tar xJ
RUN wget -qO- http://download.qt.io/snapshots/ci/qtwebkit/5.212/1515668564/src/submodules/qtwebkit-everywhere-src-5.212.tar.xz | tar xJ

RUN sudo xbps-install -y base-devel MesaLib-devel freetype-devel fontconfig-devel libressl-devel 

ENV PATH $PATH:$HOME/qt-everywhere-5.11.3/bin:$PATH

RUN sudo xbps-install -y cmake gperf ruby sqlite-devel libjpeg-turbo-devel icu-devel libxml++-devel libxslt-devel libXcomposite-devel libXrender-devel gstreamer1-devel gst-plugins-base1-devel hyphen-devel libexecinfo-devel \
libSM-devel attr-devel

# Install patched version of proot
RUN mkdir temprepo
COPY temprepo/proot-5.1.0_5.x86_64-musl.xbps temprepo
COPY temprepo/x86_64-musl-repodata temprepo

RUN sudo xbps-install --repository=/home/kdedev/temprepo --yes proot

# Prepare to build packates
RUN sudo sudo xbps-install --yes xtools
RUN git clone https://github.com/void-linux/void-packages && cd void-packages && ./xbps-src binary-bootstrap

# Patch packages
RUN echo XBPS_CHROOT_CMD=proot >> void-packages/etc/conf
COPY void-packages.patch /home/kdedev/
RUN patch -d void-packages -p1 < void-packages.patch
RUN cd void-packages && ./xbps-src pkg fontconfig-devel 
RUN cd void-packages && ./xbps-src pkg dbus-devel 
RUN cd void-packages && ./xbps-src pkg icu-devel 
RUN cd void-packages && ./xbps-src pkg libxslt-devel 
RUN cd void-packages && ./xbps-src pkg libgpg-error-devel 
RUN cd void-packages && ./xbps-src pkg libxcb-devel 
RUN cd void-packages && ./xbps-src pkg xcb-util-keysyms-devel
RUN cd void-packages && ./xbps-src pkg libxml2-devel
RUN sudo xbps-install --repository=/home/kdedev/void-packages/hostdir/binpkgs --ignore-conf-repos --force --yes fontconfig-devel dbus-devel icu-devel libxslt-devel libgpg-error-devel libxcb-devel xcb-util-keysyms-devel libxml2-devel
# Also MesaLib-devel libllvm7

COPY thread.cpp.patch qt-everywhere-src-5.11.3
RUN cd qt-everywhere-src-5.11.3 && patch -p0 < thread.cpp.patch
COPY config.voidlinux.opt qt-everywhere-src-5.11.3/config.opt
RUN wget https://raw.githubusercontent.com/gentoo/libressl/master/dev-qt/qtnetwork/files/qtnetwork-5.11.3-libressl-2.8.patch && patch -d qt-everywhere-src-5.11.3/qtbase -p1 < qtnetwork-5.11.3-libressl-2.8.patch
COPY execinfo.h.patch /home/kdedev
RUN sudo patch -d / -p0 < ~/execinfo.h.patch

RUN cd qt-everywhere-src-5.11.3 && ./configure -redo
RUN cd qt-everywhere-src-5.11.3 && make -j4 -Oline && make -j4 install

RUN cd qtwebkit-everywhere-src-5.212 && \
    cmake -DPORT=Qt -DCMAKE_BUILD_TYPE=ReleASE -DQt5_DIR=/home/kdedev/qt-everywhere-5.11.3 -DCMAKE_PREFIX_PATH=/home/kdedev/qt-everywhere-5.11.3/lib/cmake -DCMAKE_INSTALL_PREFIX=/home/kdedev/qt-everywhere-5.11.3 -DENABLE_SAMPLING_PROFILER=0 && \
    make -j4 && make -j4 install

# Install kdesrc-build
RUN sudo xbps-install -y git perl-YAML-LibYAML
RUN git clone git://anongit.kde.org/kdesrc-build.git

# Download KDE sources
RUN mkdir kde
COPY kdesrc-buildrc.sources       kde
COPY kf5-frameworks-build-include kde
RUN ~/kdesrc-build/kdesrc-build --verbose --rc-file=$HOME/kde/kdesrc-buildrc.sources --src-only --include-dependencies okular

# Patch KDE sources
COPY git-patch.sh kde
COPY build-git-patch kde
RUN cd kde && sh git-patch.sh

# Install more KDE dependencies
RUN sudo xbps-install -y ccache \
    polkit-devel \
    phonon-devel \
    docbook-xml docbook-xsl \
    libgcrypt-devel \
    boost-devel
    
# Do the KDE build
COPY kdesrc-buildrc.voidlinux kde/kdesrc-buildrc
RUN sudo sh -c "echo \!\<arch\> > /usr/lib/libgcc_s.a"

ENV PATH /home/kdedev/qt-everywhere-5.11.3/bin:$PATH
RUN ~/kdesrc-build/kdesrc-build --rc-file=$HOME/kde/kdesrc-buildrc --build-only --refresh-build --include-dependencies okular; exit 0

RUN sudo xbps-install -y openssh && sudo ssh-keygen -A
RUN mkdir .ssh
COPY authorized_keys /home/kdedev/.ssh
